{"version":3,"sources":["components/Footer.jsx","components/Header.jsx","components/Carousel.jsx","pages/Portrait.jsx","pages/Landscape.jsx","pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","className","onClick","window","scrollTo","top","behavior","href","target","rel","icon","faInstagram","faFacebookSquare","Header","to","Carousel","props","useState","size","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","params","slidesPerView","spaceBetween","centeredSlides","loop","initialSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","settings","mobile","photosItem","photos","map","photo","index","key","style","width","alt","src","Fragment","Portrait","Landscape","About","history","createBrowserHistory","basename","process","Boolean","location","hostname","match","ReactDOM","render","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.114e7a7f.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookSquare } from '@fortawesome/free-brands-svg-icons'\nimport './Footer.css'\n\nexport function Footer() {\n  function scrollToTop() {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n  return (\n    <div className=\"footer\">\n      <div className=\"social\">\n        <div className=\"back-to-top\" onClick={scrollToTop}>Back to Top</div>\n        <a href=\"https://instagram.com/mura.william\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <FontAwesomeIcon icon={faInstagram} />\n        </a>\n        <a href=\"https://www.facebook.com/wmura\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <FontAwesomeIcon icon={faFacebookSquare} />\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css'\n\nexport function Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"title\"><Link to=\"/\">WILLIAM MURA</Link></div>\n      <div className=\"menu\">\n        <Link to=\"/\"><span>Portraits</span></Link>\n        <Link to=\"/landscapes\"><span>Landscapes</span></Link>\n        <Link to=\"/about\"><span>About</span></Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useLayoutEffect } from 'react';\nimport Swiper from 'react-id-swiper';\nimport 'swiper/css/swiper.css'\nimport './Carousel.css';\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\nexport function Carousel(props) {\n  const [size] = useWindowSize();\n  const params = {\n    slidesPerView: 'auto',\n    spaceBetween: 0,\n    centeredSlides: true,\n    loop: true,\n    // lazy: true,\n    initialSlide: 1,\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n    renderPrevButton: () => <div className=\"nav-button swiper-button-prev\" />,\n    renderNextButton: () => <div className=\"nav-button swiper-button-next\" />,\n    ...props.settings\n  }\n  const mobile = size < 600;\n  const photosItem = props.photos.map((photo, index) => (\n    <div className=\"photo-item\" key={`photo-${index}`} style={{width: mobile ? '100%' : photo.width}}>\n      <img alt=\"Portrait\" src={photo.src} className=\"img-carousel\" />\n    </div>\n  ));\n  if (size < 600) {\n    return (\n      <React.Fragment>{photosItem}</React.Fragment>\n    );\n  }\n  return (\n    <Swiper {...params}>\n      {photosItem}\n    </Swiper>\n  );\n}\n","import React from 'react';\nimport { Carousel } from '../components/Carousel';\n\nexport function Portrait() {\n  const photos = [\n    {src: './images/portraits/A29A2443.jpg', width: 400},\n    {src: './images/portraits/A29A0689.jpg', width: 900},\n    {src: './images/portraits/A29A2837.jpg', width: 400},\n    {src: './images/portraits/A29A2536.jpg', width: 400},\n    {src: './images/portraits/A29A2244.jpg', width: 900},\n    {src: './images/portraits/A29A2333.jpg', width: 400},\n    {src: './images/portraits/A29A2796.jpg', width: 400},\n    {src: './images/portraits/IMG_1770.jpg', width: 400},\n    {src: './images/portraits/A29A1784.jpg', width: 400},\n    {src: './images/portraits/A29A0724.jpg', width: 900}\n  ];\n  return (\n    <div className=\"content\">\n      <Carousel photos={photos} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Carousel } from '../components/Carousel';\n\nexport function Landscape() {\n  const photos = [\n    {src: './images/landscapes/IMG_1711.jpg', width: 900},\n    {src: './images/landscapes/IMG_1822.jpg', width: 900},\n    {src: './images/landscapes/IMG_2195.jpg', width: 900},\n    {src: './images/landscapes/IMG_7837.jpg', width: 900}\n  ];\n  return (\n    <div className=\"content\">\n      <Carousel photos={photos} settings={{loop: true}} />\n    </div>\n  );\n}\n","import React from 'react';\nimport './About.css'\n\nexport function About() {\n  return (\n    <div className=\"content\">\n      <div className=\"cover\">\n        <img className=\"img-portrait\" alt=\"Portrait of William Mura\" src=\"images/me.jpg\" />\n      </div>\n      <div className=\"about\">\n        <div className=\"description\">\n          <h3>About</h3>\n          Hi, I'm William Mura. This is me, with my camera, a beautiful Canon EOS R.\n          I rarely show myself but I wanted to introduce myself.\n          I come from France and I have been in Montreal for 5 years now.\n          I started my career here as Software Engineer.<br />\n          I have a strong passion for photos. I mainly shot landscapes and portraits, and, I really love warm color, as you can see \n          in this beautiful sunset shot in Guadeloupe.\n          <p className=\"signature\">-- William Mura</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\n// Components\nimport { Footer } from './components/Footer';\nimport { Header } from './components/Header';\n\n// Pages\nimport { Portrait } from './pages/Portrait';\nimport { Landscape } from './pages/Landscape';\nimport { About } from './pages/About';\n\n// CSS\nimport './App.css';\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nexport default function App() {\n  return (\n    <Router history={history}>\n      <div className=\"App\">\n        <div className=\"contentWrapper\">\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Portrait />\n            </Route>\n            <Route path=\"/landscapes\">\n              <Landscape />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n          <Footer />\n        </div>\n      </div>\n    </Router>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}